:root {
  --base: #000000;
  --muted: #d3d3d3;
  --bg-dark: #272727;
  --bg-light: #424242;
  --text: #ffffff;

  --success: #94e337;

  --speed: 0.4s;

  --width: min(100vh, 100vw);
  --tile: calc(var(--width) / 8);
  --font-size: calc(var(--width) / 32);
  --border-radius: calc(var(--tile) / 16);
  --border-radius-lg: calc(var(--tile) / 4);
}

body {
  margin: 0;
}

#opepen {
  position: relative;
  background: var(--base);
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: repeat(8, 1fr);
}

#opepen-check {
  --size: calc(var(--tile) / 2);

  position: relative;
  grid-area: 2 / 7 / 2 / 7;
  width: var(--size);
  height: var(--size);
  top: var(--size);
  color: white;
}

#stats {
  position: absolute;
  top: 0;
  height: calc(var(--tile) / 4);
  width: 100%;
  background: var(--bg-dark);
  color: #5f5f5f;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;

  & > svg {
    height: 40%;
    max-width: calc(100% - 4rem);
  }
}

#characters {
  grid-area: 3 / 3 / 7 / 7;
  display: grid;
  grid-gap: 0;
  border-radius: var(--border-radius-lg);
  border-top-left-radius: var(--border-radius);
  overflow: hidden;

  &.edition-1 {
    --font-size: calc(var(--width) / 16);

    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, 1fr);
    font-size: calc(var(--font-size) * 1.618);
  }
  &.edition-4 {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    font-size: calc(var(--font-size) * 1.4);
  }
  &.edition-5 {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
    font-size: calc(var(--font-size) * 1.2);
  }
  &.edition-10 {
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(5, 1fr);
    font-size: calc(var(--font-size) * 1);
  }
  &.edition-20 {
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: repeat(6, 1fr);
    font-size: calc(var(--font-size) * 0.8);
  }
  &.edition-40 {
    grid-template-columns: repeat(7, 1fr);
    grid-template-rows: repeat(7, 1fr);
    font-size: calc(var(--font-size) * 0.6);
  }

  & > span {
    background-color: var(--bg-dark);
    color: var(--text);
    font-size: inherit;
    display: flex;
    align-items: center;
    justify-content: center;
    text-transform: uppercase;
    transition: background var(--speed);

    &.dark {
      background-color: var(--bg-dark);
    }
    &.light {
      background-color: var(--bg-light);
    }
    &.highlight {
      background-color: var(--success);
    }

    & > svg {
      height: 1em;
    }
  }
}

#input-form {
  --padding-x: calc(var(--tile) / 2.25);

  display: flex;
  align-items: center;
  height: 100%;
  grid-area: 8 / 3 / 8 / 7;
  position: relative;

  & > #vvriter {
    position: absolute;
    color: var(--text);
    display: flex;
    align-items: center;
    max-width: calc(100% - var(--tile) - var(--padding-x));
    padding: 0 var(--tile) 0 var(--padding-x);
    overflow: hidden;
    pointer-events: none;

    & > svg {
      height: calc(var(--font-size) * 0.8);
    }
  }

  & > button {
    position: absolute;
    left: -500vw;
    opacity: 0.0001;
  }

  & > input {
    position: relative;
    display: block;
    flex-grow: 0;
    width: 100%;
    height: 100%;
    background: var(--bg-dark);
    border: 0;
    color: transparent;
    text-transform: uppercase;
    font-size: var(--font-size);
    border-top-left-radius: var(--border-radius-lg);
    border-top-right-radius: var(--border-radius-lg);
    padding: 0 var(--tile) 0 var(--padding-x);
    transition: all var(--speed);

    &:focus,
    &:active,
    &:hover {
      outline: none;
    }

    caret-color: transparent;
    &::-webkit-input-placeholder {
      color: transparent;
    }
    &::-moz-placeholder {
      color: transparent;
    }
    &:-ms-input-placeholder {
      color: transparent;
    }
  }

  &:has(> input:focus:placeholder-shown) {
    &:after {
      content: '';
      position: absolute;
      width: calc(var(--font-size) / 8);
      height: var(--font-size);
      background: var(--text);
      left: var(--padding-x);
      animation: blink var(--speed) alternate infinite;
    }
  }

  &.empty {
    & > input:not(:focus) {
      background: var(--bg-dark);
    }
  }

  &.invalid {
    color: red;

    & > svg,
    & > #vvriter > svg {
      color: red;

      &#icon-uncheck {
        opacity: 1;
      }
    }
  }

  & > svg {
    --size: calc(var(--tile) / 2.5);

    opacity: 0;
    position: absolute;
    width: var(--size);
    height: var(--size);
    right: var(--padding-x);
    color: var(--text);
    transition: all var(--speed);
    pointer-events: none;

    &.shown {
      opacity: 0.25;
      pointer-events: all;
      cursor: pointer;
    }

    &.success {
      opacity: 1;
      color: var(--success);
    }
  }
}

@keyframes blink {
  from {
    opacity: 0%;
  }

  to {
    opacity: 100%;
  }
}
